"use strict";(self.webpackChunkextension_documentation=self.webpackChunkextension_documentation||[]).push([[263],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=d(t),f=o,m=p["".concat(s,".").concat(f)]||p[f]||u[f]||a;return t?r.createElement(m,i(i({ref:n},l),{},{components:t})):r.createElement(m,i({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3676:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:1},i="Coding Standards",c={unversionedId:"coding-standards/coding-standards",id:"coding-standards/coding-standards",title:"Coding Standards",description:"Start by creating a coding-standards.json file in your root workspace folder. The file should look like the one below:",source:"@site/docs/coding-standards/coding-standards.md",sourceDirName:"coding-standards",slug:"/coding-standards/",permalink:"/extension-documentation/docs/coding-standards/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/extension-documentation/docs/category/configuration"},next:{title:"Entities",permalink:"/extension-documentation/docs/coding-standards/entities"}},s={},d=[],l={toc:d};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"coding-standards"},"Coding Standards"),(0,o.kt)("p",null,"Start by creating a ",(0,o.kt)("inlineCode",{parentName:"p"},"coding-standards.json")," file in your root workspace folder. The file should look like the one below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "entityRelations": {\n    "component": {\n      "model": ["PROPERTY"],\n      "service": ["CONSTRUCTOR"],\n      "router": ["CONSTRUCTOR"],\n      "activatedRoute": ["CONSTRUCTOR"]\n    },\n    "service": {\n      "httpClient": ["CONSTRUCTOR"],\n      "model": ["PARAMETER", "RETURN"]\n    }\n  },\n  "external": {\n    "httpClient": {\n      "type": "HttpClient",\n      "module": "@angular/common/http"\n    },\n    "router": {\n      "type": "Router",\n      "module": "@angular/router"\n    },\n    "activatedRoute": {\n      "type": "ActivatedRoute",\n      "module": "@angular/router"\n    }\n  },\n  "entities": {\n    "component": {\n      "type": "ANGULAR_COMPONENT",\n      "folder": "components/$name$",\n      "config": {\n        "stylesExtension": "none",\n        "viewEncapsulation": "None",\n        "selector": "generated",\n        "changeDetectionStrategy": "OnPush"\n      }\n    },\n    "model": {\n      "type": "DATA_STRUCTURE"\n    },\n    "service": {\n      "type": "ANGULAR_SERVICE"\n    }\n  }\n}\n')))}u.isMDXComponent=!0}}]);